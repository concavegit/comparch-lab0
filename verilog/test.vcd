$date
	Tue Sep 25 21:46:31 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fulladder4bit_tb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " overflow $end
$var wire 1 # carryout $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$var integer 32 & ii [31:0] $end
$scope module add $end
$var wire 4 ' a [3:0] $end
$var wire 4 ( b [3:0] $end
$var wire 1 " overflow $end
$var wire 4 ) sum [3:0] $end
$var wire 1 # carryout $end
$var wire 1 * carry2 $end
$var wire 1 + carry1 $end
$var wire 1 , carry0 $end
$scope module add0 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 + carry $end
$var wire 1 / sum0 $end
$var wire 1 0 sum $end
$var wire 1 1 carry1 $end
$var wire 1 2 carry0 $end
$var wire 1 , c $end
$scope module h0 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 2 carry $end
$var wire 1 / sum $end
$upscope $end
$scope module h1 $end
$var wire 1 / a $end
$var wire 1 1 carry $end
$var wire 1 0 sum $end
$var wire 1 , b $end
$upscope $end
$upscope $end
$scope module add1 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 + c $end
$var wire 1 * carry $end
$var wire 1 5 sum0 $end
$var wire 1 6 sum $end
$var wire 1 7 carry1 $end
$var wire 1 8 carry0 $end
$scope module h0 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 8 carry $end
$var wire 1 5 sum $end
$upscope $end
$scope module h1 $end
$var wire 1 5 a $end
$var wire 1 + b $end
$var wire 1 7 carry $end
$var wire 1 6 sum $end
$upscope $end
$upscope $end
$scope module add2 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 * c $end
$var wire 1 # carry $end
$var wire 1 ; sum0 $end
$var wire 1 < sum $end
$var wire 1 = carry1 $end
$var wire 1 > carry0 $end
$scope module h0 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 > carry $end
$var wire 1 ; sum $end
$upscope $end
$scope module h1 $end
$var wire 1 ; a $end
$var wire 1 * b $end
$var wire 1 = carry $end
$var wire 1 < sum $end
$upscope $end
$upscope $end
$scope module half $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 , carry $end
$var wire 1 A sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xA
1@
1?
x>
x=
x<
x;
0:
09
x8
x7
x6
x5
04
13
x2
x1
x0
x/
1.
0-
x,
x+
x*
bx )
b11 (
b101 '
b0 &
b11 %
b101 $
x#
x"
bx !
$end
#50
bx0 !
bx0 )
0A
1,
1/
02
15
08
0;
0>
#100
bx00 !
bx00 )
00
11
0=
#150
1+
0#
#200
bx000 !
bx000 )
06
17
#250
1*
#300
b1000 !
b1000 )
1<
1"
#600
0.
0?
b1 %
b1 (
b100 $
b100 '
b1 &
#650
0/
b1001 !
b1001 )
1A
0,
#700
01
#750
0+
#800
b1101 !
b1101 )
16
07
#850
0*
#900
b101 !
b101 )
0<
0"
#1200
1.
14
1:
1-
03
b1111 %
b1111 (
b10 $
b10 '
b10 &
#1250
1;
12
#1300
b1101 !
b1101 )
1<
1+
#1350
b1001 !
b1001 )
06
17
#1400
1*
#1450
b1 !
b1 )
0<
1=
1"
#1500
1#
#1550
0"
#1800
0.
04
13
b1001 %
b1001 (
b110 $
b110 '
b11 &
#1850
1/
02
#1900
b11 !
b11 )
10
0+
#1950
b111 !
b111 )
16
07
#2000
0*
#2050
b1111 !
b1111 )
1<
0=
1"
#2100
0#
#2150
0"
#2400
1.
14
0:
19
b111 %
b111 (
b1110 $
b1110 '
b100 &
#2450
0/
12
05
18
#2500
00
1+
b1001 !
b1001 )
06
1*
#2550
16
b101 !
b101 )
0<
1=
1"
#2600
1#
#2650
0"
#3000
0@
0.
04
1?
03
b0 %
b0 (
b1011 $
b1011 '
b101 &
#3050
1/
02
08
#3100
b111 !
b111 )
10
0+
0*
#3150
06
b1011 !
b1011 )
1<
0=
1"
#3200
0#
#3250
0"
#3600
1.
1:
0?
0-
b1010 %
b1010 (
b1000 $
b1000 '
b110 &
#3650
0;
1>
b1010 !
b1010 )
0A
#3700
b10 !
b10 )
0<
1#
#3750
1"
#4200
1@
0.
14
13
b1101 %
b1101 (
b1100 $
b1100 '
b111 &
#4250
b11 !
b11 )
1A
0/
18
#4300
b1 !
b1 )
00
1*
#4350
b1001 !
b1001 )
1<
0"
#4800
1.
0:
1?
1-
09
b111 %
b111 (
b111 $
b111 '
b1000 &
#4850
b1000 !
b1000 )
0A
1,
12
0>
#4900
b1010 !
b1010 )
10
1+
0#
#4950
b1110 !
b1110 )
16
1"
#5400
0@
0.
04
b0 %
b0 (
b1001 &
#5450
b1111 !
b1111 )
1A
0,
1/
02
15
08
#5500
0+
b1011 !
b1011 )
06
17
0*
#5550
16
07
1*
b111 !
b111 )
0<
0"
#5600
0*
b1111 !
b1111 )
1<
1"
#5650
b111 !
b111 )
0<
0"
#6000
1:
b1000 %
b1000 (
b1010 &
#6050
1;
#6100
b1111 !
b1111 )
1<
#6600
0?
0-
03
b0 $
b0 '
b1011 &
#6650
b1110 !
b1110 )
0A
0/
05
#6700
00
b1000 !
b1000 )
06
#7200
19
b1000 $
b1000 '
b1100 &
#7250
0;
1>
#7300
b0 !
b0 )
0<
1#
#7350
1"
#7800
1@
1.
14
09
b1111 %
b1111 (
b0 $
b0 '
b1101 &
#7850
b1 !
b1 )
1A
1/
15
1;
0>
#7900
10
16
b1111 !
b1111 )
1<
0#
#7950
0"
#8400
0@
0.
04
0:
b0 %
b0 (
b1110 &
#8450
b1110 !
b1110 )
0A
0/
05
0;
#8500
00
06
b0 !
b0 )
0<
#9000
1@
1.
14
1:
1?
1-
13
19
b1111 %
b1111 (
b1111 $
b1111 '
b1111 &
#9050
1,
12
18
1>
#9100
b10 !
b10 )
10
1+
1*
1#
#9150
16
b1110 !
b1110 )
1<
#9600
b10000 &
