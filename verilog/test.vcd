$date
	Sun Sep 23 13:23:08 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fulladder4bit_tb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " overflow $end
$var wire 1 # carryout $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$scope module add $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 " overflow $end
$var wire 4 ( sum [3:0] $end
$var wire 1 # carryout $end
$var wire 1 ) carry2 $end
$var wire 1 * carry1 $end
$var wire 1 + carry0 $end
$scope module add0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 * carry $end
$var wire 1 . sum0 $end
$var wire 1 / sum $end
$var wire 1 0 carry1 $end
$var wire 1 1 carry0 $end
$var wire 1 + c $end
$scope module h0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 1 carry $end
$var wire 1 . sum $end
$upscope $end
$scope module h1 $end
$var wire 1 . a $end
$var wire 1 0 carry $end
$var wire 1 / sum $end
$var wire 1 + b $end
$upscope $end
$upscope $end
$scope module add1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 * c $end
$var wire 1 ) carry $end
$var wire 1 4 sum0 $end
$var wire 1 5 sum $end
$var wire 1 6 carry1 $end
$var wire 1 7 carry0 $end
$scope module h0 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 7 carry $end
$var wire 1 4 sum $end
$upscope $end
$scope module h1 $end
$var wire 1 4 a $end
$var wire 1 * b $end
$var wire 1 6 carry $end
$var wire 1 5 sum $end
$upscope $end
$upscope $end
$scope module add2 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 ) c $end
$var wire 1 # carry $end
$var wire 1 : sum0 $end
$var wire 1 ; sum $end
$var wire 1 < carry1 $end
$var wire 1 = carry0 $end
$scope module h0 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 = carry $end
$var wire 1 : sum $end
$upscope $end
$scope module h1 $end
$var wire 1 : a $end
$var wire 1 ) b $end
$var wire 1 < carry $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$scope module half $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 + carry $end
$var wire 1 @ sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x@
1?
1>
x=
x<
x;
x:
09
08
x7
x6
x5
x4
03
12
x1
x0
x/
x.
1-
0,
x+
x*
x)
bx (
b11 '
b101 &
b11 %
b101 $
x#
x"
bx !
$end
#50
bx0 !
bx0 (
0@
1+
1.
01
14
07
0:
0=
#100
bx00 !
bx00 (
0/
10
0<
#150
1*
0#
#200
bx000 !
bx000 (
05
16
#250
1)
#300
b1000 !
b1000 (
1;
1"
#600
0-
0>
b1 %
b1 '
b100 $
b100 &
#650
0.
b1001 !
b1001 (
1@
0+
#700
00
#750
0*
#800
b1101 !
b1101 (
15
06
#850
0)
#900
b101 !
b101 (
0;
0"
#1200
1-
13
19
1,
02
b1111 %
b1111 '
b10 $
b10 &
#1250
1:
11
#1300
b1101 !
b1101 (
1;
1*
#1350
b1001 !
b1001 (
05
16
#1400
1)
#1450
b1 !
b1 (
0;
1<
1"
#1500
1#
#1550
0"
#1800
0-
03
12
b1001 %
b1001 '
b110 $
b110 &
#1850
1.
01
#1900
b11 !
b11 (
1/
0*
#1950
b111 !
b111 (
15
06
#2000
0)
#2050
b1111 !
b1111 (
1;
0<
1"
#2100
0#
#2150
0"
#2400
1-
13
09
18
b111 %
b111 '
b1110 $
b1110 &
#2450
0.
11
04
17
#2500
0/
1*
b1001 !
b1001 (
05
1)
#2550
15
b101 !
b101 (
0;
1<
1"
#2600
1#
#2650
0"
#3000
0?
0-
03
1>
02
b0 %
b0 '
b1011 $
b1011 &
#3050
1.
01
07
#3100
b111 !
b111 (
1/
0*
0)
#3150
05
b1011 !
b1011 (
1;
0<
1"
#3200
0#
#3250
0"
#3600
1-
19
0>
0,
b1010 %
b1010 '
b1000 $
b1000 &
#3650
0:
1=
b1010 !
b1010 (
0@
#3700
b10 !
b10 (
0;
1#
#3750
1"
#4200
1?
0-
13
12
b1101 %
b1101 '
b1100 $
b1100 &
#4250
b11 !
b11 (
1@
0.
17
#4300
b1 !
b1 (
0/
1)
#4350
b1001 !
b1001 (
1;
0"
#4800
1-
09
1>
1,
08
b111 %
b111 '
b111 $
b111 &
#4850
b1000 !
b1000 (
0@
1+
11
0=
#4900
b1010 !
b1010 (
1/
1*
0#
#4950
b1110 !
b1110 (
15
1"
#5400
0?
0-
03
b0 %
b0 '
#5450
b1111 !
b1111 (
1@
0+
1.
01
14
07
#5500
0*
b1011 !
b1011 (
05
16
0)
#5550
15
06
1)
b111 !
b111 (
0;
0"
#5600
0)
b1111 !
b1111 (
1;
1"
#5650
b111 !
b111 (
0;
0"
#6000
19
b1000 %
b1000 '
#6050
1:
#6100
b1111 !
b1111 (
1;
#6600
0>
0,
02
b0 $
b0 &
#6650
b1110 !
b1110 (
0@
0.
04
#6700
0/
b1000 !
b1000 (
05
#7200
18
b1000 $
b1000 &
#7250
0:
1=
#7300
b0 !
b0 (
0;
1#
#7350
1"
#7800
1?
1-
13
08
b1111 %
b1111 '
b0 $
b0 &
#7850
b1 !
b1 (
1@
1.
14
1:
0=
#7900
1/
15
b1111 !
b1111 (
1;
0#
#7950
0"
#8400
0?
0-
03
09
b0 %
b0 '
#8450
b1110 !
b1110 (
0@
0.
04
0:
#8500
0/
05
b0 !
b0 (
0;
#9000
1?
1-
13
19
1>
1,
12
18
b1111 %
b1111 '
b1111 $
b1111 &
#9050
1+
11
17
1=
#9100
b10 !
b10 (
1/
1*
1)
1#
#9150
15
b1110 !
b1110 (
1;
#9600
